@model IT_Airlines.Models.ViewModels.BeginReservationsViewModel
@{
    ViewBag.Title = "Home Page";
}

@Styles.Render("~/Content/css_Home/Home_index.css")

@* Div content vo nego kje bide organizirano se za prebaruvanjeto na let*@
<br>
<div id="content" class="">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="form-group col-md-5 col-sm-12 p-0 text-black-50">
                @Html.LabelFor(model => model.AirportFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.AirportFrom, ViewBag.Airports as SelectList, "Select Airport", new { @class = "form-control w-100", id = "ddlAirportFrom" })
                    @Html.ValidationMessageFor(model => model.AirportFrom, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-md-5 col-sm-12 p-0 text-black-50">
                @Html.LabelFor(model => model.AirportTo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.AirportTo, ViewBag.Airports as SelectList, "Select Airport", new { @class = "form-control w-100", id = "ddlAirportTo" })
                    @Html.ValidationMessageFor(model => model.AirportTo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-2 p-0 text-black-50">
                @Html.LabelFor(model => model.RoundTrip, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.CheckBoxFor(model => model.RoundTrip, new { @class = "cb", id = "RoundTrip" })
                    @Html.ValidationMessageFor(model => model.RoundTrip, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-5 p-0 text-black-50">
                @Html.LabelFor(model => model.Departure, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Departure, new { htmlAttributes = new { @class = "form-control w-100 p-0", id = "departure-datepicker", type = "text", placeholder = "Choose date..." } })
                    @Html.ValidationMessageFor(model => model.Departure, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="return" class="form-group col-md-5 p-0 text-black-50">
                @Html.LabelFor(model => model.Return, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Return, new { htmlAttributes = new { @class = "form-control w-100 p-0", id = "return-datepicker", type = "text", placeholder = "Choose date..." } })
                    @Html.ValidationMessageFor(model => model.Return, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group col-md-2 p-0 text-black-50">
                @Html.LabelFor(model => model.Passengers, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Passengers, new { htmlAttributes = new { @class = "form-control w-100", min = 1, max = 50 } })
                    @Html.ValidationMessageFor(model => model.Passengers, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-4"></div>
            @*<div class="col-sm-4"></div>*@
            <div class="col-sm-4">
                <div class="col-md-offset-2 col-md-12">
                    <div class="btn-group mr-2 btn-block" role="group" aria-label="First group">
                        <button type="submit" class="btn btn-outline-danger btn-block">Continue</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<br>
<br>
<div id="carouselExampleIndicators" data-interval="3000" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
        <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
        <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
        <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
    </ol>
    <div class="carousel-inner mt-5">
        <div class="carousel-item active">
            <img class="d-block w-100" height="300px" src="~/Img/photo1.jpg" alt="First slide">
        </div>
        <div class="carousel-item">
            <img class="d-block w-100" height="300px" src="~/Img/photo2.jpg" alt="Second slide">
        </div>
        <div class="carousel-item">
            <img class="d-block w-100" height="300px" src="~/Img/photo3.jpg" alt="Third slide">
        </div>
    </div>
    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {

            const format = "mm/dd/yy";

            $("#departure-datepicker").datepicker({
                minDate: new Date(),
                dateFormat: format,
                changeMonth: true,
                changeYear: true,
                onSelect: function () {
                    var date = $(this).datepicker('getDate');

                    $("#return-datepicker").datepicker('option', 'minDate', date);
                },
                numberOfMonths: 3
            }).attr('readonly', 'readonly');


            $("#return-datepicker").datepicker({
                minDate: new Date(),
                dateFormat: format,
                changeMonth: true,
                changeYear: true,
                numberOfMonths: 3
            }).attr('readonly', 'readonly');


            ShowReturnDate();
            /*HideAirportsFrom($('#ddlAirportFrom').children("option:selected").val());
            HideAirportsTo($('#ddlAirportTo').children("option:selected").val());*/

            //Podobro e so Id
            $('#RoundTrip').on('click', function () {
                ShowReturnDate();
            });
            
            //Pri promena na aerodrom da se skrie od AirportTo
            $('#ddlAirportFrom').change(function () {
                var SelectedItem = $(this).children("option:selected").val();

                HideAirportsFrom(SelectedItem);

            });

            //Pri promena na aerodrom da se skrie od AirportFrom
            $('#ddlAirportTo').change(function () {
                var SelectedItem = $(this).children("option:selected").val();

                HideAirportsTo(SelectedItem);
            });



            //Se krie Aerodromot za da nemoze da nastane dva isti aerodroma da  se odberat
            function HideAirportsFrom(item) {
                //Go Krijam Select Airport za da nema greski pri biranjeto
                $('#ddlAirportFrom option').each(function () {
                    if ($(this).val() == "") {
                        $(this).hide();
                    }
                });
                $('#ddlAirportTo option').each(function () {
                    if ($(this).val() == item || $(this).val() == "") {
                        $(this).hide();
                    }
                    else {
                        $(this).show();
                    }
                });
            }

            function HideAirportsTo(item) {
                //Go Krijam Select Airport za da nema greski pri biranjeto
                $('#ddlAirportTo option').each(function () {
                    if ($(this).val() == "") {
                        $(this).hide();
                    }
                });
                $('#ddlAirportFrom option').each(function () {
                    if ($(this).val() == item || $(this).val() == "") {
                        $(this).hide();
                    }
                    else {
                        $(this).show();
                    }
                });
            }

            function ShowReturnDate() {
                if ($('#RoundTrip').prop("checked") == true) {
                    $("#return-datepicker").attr("disabled", false);
                }
                else if ($('#RoundTrip').prop("checked") == false) {
                    $("#return-datepicker").attr("disabled", true);
                    $("#return-datepicker").val("");
                }
            }
        });

    </script>
}
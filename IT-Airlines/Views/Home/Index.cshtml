@model IT_Airlines.Models.ViewModels.BeginReservationsViewModel
@{
    ViewBag.Title = "Home Page";
}

<style>

    body {
        background: url("../../Img/log-sign-in.jpg") no-repeat center center fixed;
        background-repeat: no-repeat;
        background-size: 100% 100%;
    }

    #content {
        width: 100%;
        background-color: white;
        opacity: 0.9;
        border-radius: 5px;
        padding: 5%;
    }

    input, select, textarea {
        max-width: 100% !important;
    }

</style>

@* Div content vo nego kje bide organizirano se za prebaruvanjeto na let*@
<div id="content" class="">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="form-group col-md-5 col-sm-12 p-0 text-black-50">
                @Html.LabelFor(model => model.AirportFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.AirportFrom, ViewBag.Airports as SelectList, "Select Airport", new { @class = "form-control w-100", id = "ddlAirportFrom" })
                    @Html.ValidationMessageFor(model => model.AirportFrom, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-5 col-sm-12 p-0 text-black-50">
                @Html.LabelFor(model => model.AirportTo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.AirportTo, ViewBag.Airports as SelectList, "Select Airport", new { @class = "form-control w-100", id = "ddlAirportTo" })
                    @Html.ValidationMessageFor(model => model.AirportTo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-2 p-0 text-black-50">
                @Html.LabelFor(model => model.RoundTrip, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.CheckBoxFor(model => model.RoundTrip, new { @class = "cb", id = "RoundTrip" })
                    @Html.ValidationMessageFor(model => model.RoundTrip, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-5 p-0 text-black-50">
                @Html.LabelFor(model => model.Departure, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Departure, new { htmlAttributes = new { @class = "form-control w-100 p-0", id="departure-datepicker", type="text", placeholder="Choose date..."} })
                    @Html.ValidationMessageFor(model => model.Departure, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="return" class="form-group col-md-5 p-0 text-black-50">
                @Html.LabelFor(model => model.Return, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Return, new { htmlAttributes = new { @class = "form-control w-100 p-0", id="return-datepicker", type="text", placeholder="Choose date..."} })
                    @Html.ValidationMessageFor(model => model.Return, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group col-md-2 p-0 text-black-50">
                @Html.LabelFor(model => model.Passengers, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Passengers, new { htmlAttributes = new { @class = "form-control w-100", min = 0, max = 50 } })
                    @Html.ValidationMessageFor(model => model.Passengers, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-4"></div>
            @*<div class="col-sm-4"></div>*@
            <div class="col-sm-4">
                <div class="col-md-offset-2 col-md-12">
                    <div class="btn-group mr-2 btn-block" role="group" aria-label="First group">
                        <button type="submit" class="btn btn-outline-danger btn-block">Continue</button>
                    </div>
                </div>
            </div>
        </div>
    }
    <!--
        <div class="col-3 text-black-50">
            <label for="from">From</label>
            <input id="from" type="text" class="form-control" placeholder="From" />
        </div>
        <div class="col-3">
            <label for="to">Destination</label>
            <input id="from" type="text" class="form-control" placeholder="Destination" />
        </div>
    -->
</div>


</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            const format = "mm/dd/yy";

            $("#departure-datepicker").datepicker({
                minDate: new Date(),
                format: format,
                onSelect: function () {
                    var date = $(this).datepicker('getDate');

                    $("#return-datepicker").datepicker('option', 'minDate', date);
                },
                numberOfMonths: 3
            });


            $("#return-datepicker").datepicker({
                minDate: new Date(),
                numberOfMonths: 3
            });


            ShowReturnDate();
            /*HideAirportsFrom($('#ddlAirportFrom').children("option:selected").val());
            HideAirportsTo($('#ddlAirportTo').children("option:selected").val());*/

            //Podobro e so Id
            $('#RoundTrip').on('click',function () {
                ShowReturnDate();
            });

            //Pri promena na aerodrom da se skrie od AirportTo
            $('#ddlAirportFrom').change(function () {
                var SelectedItem = $(this).children("option:selected").val();

                HideAirportsFrom(SelectedItem);

            });

            //Pri promena na aerodrom da se skrie od AirportFrom
            $('#ddlAirportTo').change(function () {
                var SelectedItem = $(this).children("option:selected").val();

                HideAirportsTo(SelectedItem);
            });

       

        //Se krie Aerodromot za da nemoze da nastane dva isti aerodroma da  se odberat
        function HideAirportsFrom(item) {
            //Go Krijam Select Airport za da nema greski pri biranjeto
            $('#ddlAirportFrom option').each(function () {
                if ($(this).val() == "") {
                    $(this).hide();
                }
            });
            $('#ddlAirportTo option').each(function () {
                if ($(this).val() == item || $(this).val() == "") {
                    $(this).hide();
                }
                else {
                    $(this).show();
                }
            });
        }

        function HideAirportsTo(item) {
            //Go Krijam Select Airport za da nema greski pri biranjeto
            $('#ddlAirportTo option').each(function () {
                if ($(this).val() == "") {
                    $(this).hide();
                }
            });
            $('#ddlAirportFrom option').each(function () {
                if ($(this).val() == item || $(this).val() == "") {
                    $(this).hide();
                }
                else {
                    $(this).show();
                }
            });
        }

        function ShowReturnDate() {
            if ($('#RoundTrip').prop("checked") == true) {
                $("#return-datepicker").attr("disabled",false);
            }
            else if ($('#RoundTrip').prop("checked") == false) {
                $("#return-datepicker").attr("disabled", true);
                $("#return-datepicker").val("");
            }
            }
        });
    </script>
}
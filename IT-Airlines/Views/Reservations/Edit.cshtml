@model IT_Airlines.Models.ViewModels.EditReservationViewModel

@{
    ViewBag.Title = "Edit";
}

<style>

    body {
        background: url("../../Img/log-sign-in.jpg") no-repeat center center fixed;
        background-repeat: no-repeat;
        background-size: 100% 100%;
    }

    #content {
        width: 100%;
        background-color: white;
        opacity: 0.9;
        border-radius: 5px;
        padding: 5%;
    }

    .btn-outline-danger {
        color: white;
        background-color: #FF5A5A;
    }

    input, select, textarea {
        max-width: 100%;
    }
</style>

<div class="col-sm-5 mr-auto ml-auto" id="content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Reservation</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.RoundTrip)
            @Html.HiddenFor(model => model.Passenger.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.FirstLuggage, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.FirstLuggage, ViewBag.Luggages as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FirstLuggage, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (Model.RoundTrip)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.SecondLuggage, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SecondLuggage, ViewBag.Luggages as SelectList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SecondLuggage, "", new { @class = "text-danger" })
                    </div>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.Passenger.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Passenger.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Passenger.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Passenger.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Passenger.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Passenger.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Passenger.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-12">
                    @Html.EnumDropDownListFor(model => model.Passenger.Gender, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Passenger.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Passenger.BirthDate, htmlAttributes: new { @class = "control-label col-md" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Passenger.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Passenger.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Passenger.PassportCode, htmlAttributes: new { @class = "control-label col-md" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Passenger.PassportCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Passenger.PassportCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-12">
                    <div class="btn-group mr-2 btn-block" role="group" aria-label="First group">
                        @Html.ActionLink("Back", "Index", null, new { @class = "btn  btn-outline-danger" })
                        <input type="submit" value="Save" class="btn btn-outline-danger" />
                    </div>
                </div>
            </div>
            
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@model IT_Airlines.Models.ViewModels.CreateReservationsViewModel
@using IT_Airlines.Models.Entities

@{
    ViewBag.Title = "Create";
}

<style>

    body {
        background: url("../../Img/log-sign-in.jpg") no-repeat center center fixed;
        background-repeat: no-repeat;
        background-size: 100% 100%;
    }

    #content {
        width: 100%;
        background-color: white;
        opacity: 0.9;
        border-radius: 5px;
        padding: 5%;
    }

    .btn-outline-danger {
        color: white;
        background-color: #FF5A5A;
    }

    input, select, textarea {
        max-width: 100%;
    }

    .err {
        color: red;
    }
</style>

<div class="row">
    <div class="col-sm-5 ml-auto mr-auto" id="content">

        <label>Total price: <span id="total"></span>$</label>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Your Reservation</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.RoundTrip)
                <div id="first-page">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Flight, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.DropDownListFor(model => model.Flight, ViewBag.Flights as SelectList, new { @class = "form-control", @id = "flight" })
                            @Html.ValidationMessageFor(model => model.Flight, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (Model.RoundTrip == true)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.ReturnFlight, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.ReturnFlight, ViewBag.ReturnFlights as SelectList, new { @class = "form-control", @id = "ret-flight" })
                                @Html.ValidationMessageFor(model => model.ReturnFlight, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-12">
                            <button type="button" id="next-page" class="btn btn-danger btn-block" onclick="SecondPage()">Continue</button>
                        </div>
                    </div>
                </div>

                <div id="second-page">
                    @for (int i = 0; i < Model.Reservations.Count; ++i)
                    {
                        string divId = "res-" + i.ToString();

                        <div id="@divId" style="display:none">
                            <h2>Enter information for passanger number @(i + 1) </h2>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Luggages[i], "Luggage", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-12">
                                    @Html.DropDownListFor(model => model.Luggages[i], ViewBag.Luggages as SelectList, new { @class = "form-control", @id = "l-" + i.ToString() })
                                    @Html.ValidationMessageFor(model => model.Luggages[i], "", new { @class = "text-danger" })

                                </div>
                            </div>
                            @if (Model.RoundTrip)
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ReturnLuggages[i], htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-12">
                                        @Html.DropDownListFor(model => model.ReturnLuggages[i], ViewBag.Luggages as SelectList, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ReturnLuggages[i], "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }

                            <div class="form-group">
                                @Html.LabelFor(model => model.Reservations[i].Passenger.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Reservations[i].Passenger.FirstName, new { htmlAttributes = new { @class = "form-control val-" + @i + "-firstname" } })
                                    @Html.ValidationMessageFor(model => model.Reservations[i].Passenger.FirstName, "", new { @class = "text-danger " })
                                    <span class="err err-@i-firstname">First name field is required</span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Reservations[i].Passenger.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Reservations[i].Passenger.LastName, new { htmlAttributes = new { @class = "form-control val-" + @i + "-lastname" } })
                                    @Html.ValidationMessageFor(model => model.Reservations[i].Passenger.LastName, "", new { @class = "text-danger" })
                                    <span class="err err-@i-lastname">Last name field is required</span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Reservations[i].Passenger.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-12">
                                    @Html.EnumDropDownListFor(model => model.Reservations[i].Passenger.Gender, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Reservations[i].Passenger.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Reservations[i].Passenger.BirthDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Reservations[i].Passenger.BirthDate, new { htmlAttributes = new { @class = "form-control val-" + @i + "-birthdate" } })
                                    @Html.ValidationMessageFor(model => model.Reservations[i].Passenger.BirthDate, "", new { @class = "text-danger" })
                                    <span class="err err-@i-birthdate">Birth date field is required</span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Reservations[i].Passenger.PassportCode, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Reservations[i].Passenger.PassportCode, new { htmlAttributes = new { @class = "form-control val-" + @i + "-passportcode" } })
                                    @Html.ValidationMessageFor(model => model.Reservations[i].Passenger.PassportCode, "", new { @class = "text-danger" })
                                    <span class="err err-@i-passportcode">Passport code field is required</span>
                                </div>
                            </div>
                            <div class="row">
                                @if (i == Model.Reservations.Count - 1)
                                {
                                    <div class="col-sm">
                                        <div class="col-md-offset-2 col-md-12">
                                            <input id="btnSubmit" type="submit" value="Create" class="btn btn-danger btn-block" onclick="create()" />
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-sm">
                                        <div class="col-md-offset-2 col-md-12">
                                            <button type="button" id="prev-page" class="btn btn-danger btn-block" onclick="goNext(@i)">Next</button>
                                        </div>
                                    </div>
                                }
                            </div>
                            <br>
                            <div class=" row">
                                @if (i == 0)
                                {
                                    <div class="col-sm">
                                        <div class="col-md-offset-2 col-md-12">
                                            <button type="button" id="prev-page" class="btn btn-light btn-block" onclick="FirstPage()">Back</button>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-sm">
                                        <div class="col-md-offset-2 col-md-12">
                                            <button type="button" id="prev-page" class="btn btn-light btn-block" onclick="goBack(@i)">Back</button>
                                        </div>
                                    </div>
                                }

                            </div>
                        </div>


                    }

                </div>


            </div>
        }
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        //validation
        function validate(id) {
            var validated = true;
            if (!validateFirstName(id)) {
                validated = false;
            }
            if (!validateLastName(id)) {
                validated = false;
            }
            if (!validateBirthDate(id)) {
                validated = false;
            }
            if (!validatePassportCode(id)) {
                validated = false;
            }
            return validated;
        }

        function validateFirstName(id) {
            var element = $(".val-" + id + "-firstname").val();
            if (element.trim() === "") {
                $(".err-" + id + "-firstname").show();
                return false;
            }
            $(".err-" + id + "-firstname").hide();
            return true;
        }

        function validateLastName(id) {
            var element = $(".val-" + id + "-lastname").val();
            if (element.trim() === "") {
                $(".err-" + id + "-lastname").show();
                return false;
            }
            $(".err-" + id + "-lastname").hide();
            return true;
        }

        function validateBirthDate(id) {
            var element = $(".val-" + id + "-birthdate").val();
            if (element.trim() === "") {
                 $(".err-" + id + "-birthdate").show();
                return false;
            }
            $(".err-" + id + "-birthdate").hide();
            return true;
        }

        function validatePassportCode(id) {
            var element = $(".val-" + id + "-passportcode").val();
            if (element.trim() === "") {
                 $(".err-" + id + "-passportcode").show();
                return false;
            }
            $(".err-" + id + "-passportcode").hide();
            return true;
        }



        //

        var sum = 0;
        var fp_sum = 0;

        $(document).ready(function () {
            init();
            document.getElementById('total').innerHTML = 0;
        });

        function init() {
            $("#second-page").hide();
            $(".err").hide();
        }

        function goNext(id) {
            if (validate(id)) {
                //if isValid(id)
            $("#res-" + id).hide();
            sum += parseInt($('#l-' + id).children("option:selected").val());  // ajax call
            id += 1;
            $("#res-" + id).show();
            document.getElementById('total').innerHTML = sum;
            }


        }

        function goBack(id) {
            $("#res-" + id).hide();
            id -= 1;
            sum -= parseInt($('#l-' + id).children("option:selected").val());
            $("#res-" + id).show();
            document.getElementById('total').innerHTML = sum;
        }

        function FirstPage() {
            $("#second-page").hide();
            $("#first-page").show();
            sum = 0;
            document.getElementById('total').innerHTML = sum;
        }

        function SecondPage() {
            $("#first-page").hide();
            $("#second-page").show();
            $("#res-0").show();

            fp_sum = parseInt($('#flight').children("option:selected").val());
            if (@Model.RoundTrip.ToString().ToLower()) {
                fp_sum += parseInt($('#ret-flight').children("option:selected").val());
            }
            sum = fp_sum * (@Model.Reservations.Count);
            document.getElementById('total').innerHTML = sum;

            console.log(sum);
        }

        function create() {
            //if valid
            sum += parseInt($('#l-' + (@Model.Reservations.Count-1)).children("option:selected").val());
            document.getElementById('total').innerHTML = sum;
        }

    </script>
}
